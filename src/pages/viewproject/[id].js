import React, { useState, useEffect } from "react";
import { useRouter } from "next/router";
import Header from "@/components/Header";
import Head from "next/head";
import Link from "next/link";
import { ethers } from "ethers";
import { contractAddress } from "../../../blockchain/config";
import JobPortal from "../../../blockchain/artifacts/contracts/JobPortal.sol/JobPortal.json";
import Web3Modal from "web3modal";

const ProjectInfo = () => {
    const router = useRouter()
    const { id } = router.query
    useEffect(() => {
        async function getTasks() {
            console.log("tasks");
            let tasksArr = [];
            const web3Modal = new Web3Modal();
            const connection = await web3Modal.connect();
            const provider = new ethers.providers.Web3Provider(connection);
            const signer = provider.getSigner();
            const jobPortal = new ethers.Contract(
                contractAddress,
                JobPortal.abi,
                signer
            );

            const cnt = await jobPortal.getTaskCountByProjectId(id);
            for (let i = 0; i <= cnt.toNumber(); i++) {
                tasksArr.push(i);
            }

            const data = await Promise.all(
                tasksArr.map(async (t) => {
                    const task = await jobPortal.getTaskData(id, t);
                    // const meta = await axios.get(project[0]);
                    // console.log(meta);
                    // convert the array to object
                    //   console.log(task);
                    const projectObj = {
                        uri: task[0],
                        //   id: task[1].toNumber(),
                        //   stakedAmount: task[2].toNumber(),
                        //   taskCount: project[3].toNumber(),
                        //   title: meta.data.title,
                        //   skills: meta.data.skills,
                        //   image: meta.data.image,
                        //   duration: meta.data.duration,
                        //   description: meta.data.description,
                        //   category: meta.data.category,
                    };
                    return projectObj;
                })
            );
            // setProjectsData(data);
            console.log(data);
        }
        getTasks();
    }, []);

    return (
        <>
            <Head>
                <title>PeerTask</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />
            {/* <section className="bg-black text-white pb-6 px-10">
                <h1 className="text-2xl font-bold my-2 md:ml-2">Project Info</h1>
                <div className='bg-[#1a1e27] rounded-xl p-5 mt-5'>
                    <div className='flex flex-col md:flex-row my-2'>
                        <h3 className="text-lg font-semibold md:ml-2">
                            Name:
                        </h3>

                        <p className="text-sm md:ml-2 mt-1">
                            Project name
                        </p>
                    </div>
                    <div className='flex flex-col md:flex-row my-2'>
                        <h3 className="text-lg font-semibold md:ml-2">
                            Description:
                        </h3>

                        <p className="text-sm md:ml-2 mt-1">
                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet quos ullam, architecto maxime repellendus id corporis? Veritatis natus quia repellendus?
                        </p>
                    </div>
                    <div className='flex flex-col md:flex-row my-2'>
                        <h3 className="text-lg font-semibold md:ml-2">
                            Category:
                        </h3>

                        <p className="text-sm md:ml-2 mt-1">
                            Defi
                        </p>

                    </div>
                    <div className='flex flex-col md:flex-row my-2'>

                        <h3 className="text-lg font-semibold md:ml-2">
                            Skills:
                        </h3>

                        <p className="text-sm md:ml-2 mt-1">
                            Solidity, React, Next.js
                        </p>
                    </div>
                </div>
                <h1 className="text-2xl font-bold my-2 md:ml-2">Tasks</h1> */}
            {/* Following should contain a list of tasks that the user can view and select to bid on. Task name, status , amount and no.of candidates working on that task is to be kep as table headers */}

            {/* <div className="my-2 overflow-x-auto">
                        <div className="py-2 inline-block w-full">
                            <div className="shadow overflow-hidden border-b border-pur sm:rounded-lg"> */}

            {/* <table className="table-auto w-full text-left">
                    <thead className="bg-[#1a1e27]">
                        <tr className="bg-[#0284c7] text-left text-sm leading-4 font-medium text-white uppercase tracking-wider">
                            <th className="p-4">Task Name</th>
                            <th className="p-4">Amount</th>
                            <th className="p-4">No. of Candidates</th>
                            <th className="p-4">Status</th>
                            <th className="p-4"></th>
                        </tr>
                    </thead>
                    <tbody className="bg-[#1a1e27] ">
                        <tr className="text-sm text-white m-20">
                            <td className="p-4">Task 1</td>
                            <td className="p-4">1000</td>
                            <td className="p-4">2</td>
                            <td className="p-4">
                                <span className="px-3 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-600 text-white-800">
                                    Done
                                </span>
                            </td>
                            <td>
                                <Link href={`/task/${id}`}>
                                    <button className="bg-[#1a1e27] text-white border border-white rounded-md px-4 py-2 text-sm font-medium hover:bg-white hover:text-black  m-3">View more</button>

                                </Link>
                            </td>

                        </tr>
                        <tr className="text-sm text-white m-20">
                            <td className="p-4">Task 2</td>
                            <td className="p-4">1000</td>
                            <td className="p-4">2</td>
                            <td className="p-4">
                                <span className="px-3 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-600 text-white-800">
                                    Pending
                                </span>
                            </td>
                            <Link href={`/task/${id}`}>
                                <button className="bg-[#1a1e27] text-white border border-white rounded-md px-4 py-2 text-sm font-medium hover:bg-white hover:text-black m-3">View more</button>
                            </Link>
                        </tr>
                    </tbody>
                </table> */}

            {/* </div>
                        </div>
                    </div> */}

            {/* </section> */}
        </>
    );
};

export default ProjectInfo;
